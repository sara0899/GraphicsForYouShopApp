@model GraphicsForYouShopApp.Models.GraphicViewModel;

@{
    ViewData["Title"] = "Dodaj nową grafikę";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="projects-container">
    <h1 class="new-project">Dodaj nowy projekt graficzny</h1>
   
        <form method="post" asp-action="Create" class="register-form" enctype = "multipart/form-data">
        <div class="form-add">
            <label asp-for="Name" class="form-label"></label>
            <input type="text" asp-for="Name" autocomplete="off" class="form-input" />
            <span asp-validation-for="Name"></span>
        </div>
        
        <div class="form-add">
            <label asp-for="Description" class="form-label"></label>
            <textarea asp-for="Description" autocomplete="off" class="form-input">
            </textarea>
            <span asp-validation-for="Description"></span>
        </div>
       
        <div class="form-add">
            <label asp-for="Price" class="form-label"></label>
            <input type="number" step="0.01" asp-for="Price" autocomplete="off" class="form-input"/>
            <span asp-validation-for="Price"></span>
        </div>
       
        <div class="form-add">
            <label asp-for="CategoryId" class="form-label"></label>
            @Html.DropDownListFor(model => model.CategoryId, new SelectList(ViewBag.categoryList, "Id", "Name"), "Wybierz kategorię", new { @class="select-list" })
            <span asp-validation-for="CategoryId"></span>
        </div>

        <div class="form-add">
            <label asp-for="CollectionId" class="form-label"></label>
            @Html.DropDownListFor(model => model.CollectionId, new SelectList(ViewBag.collectionList, "Id", "Name"), "Wybierz kolekcję", new { @class="select-list" })
            <span asp-validation-for="CollectionId"></span>
        </div>

        <hr style="width: 70%; margin-right: auto; margin-left: auto;"/>
        <div class="form-add">
            <label asp-for="MainPicture" class="form-label"></label>
            <div class="graphic-pictures">
                    <div class="item" id="mainGraphicPictureContainer"></div>
              </div>
             @Html.TextBoxFor(m => m.MainPicture, new { type = "file", name = "MainPicture", id="mainGraphicPicture", @class="form-label"})
             <span asp-validation-for="MainPicture"></span>
        </div>
        
        <hr style="width: 70%; margin-right: auto; margin-left: auto;"/>
        <div class="form-add">
            <label asp-for="Pictures" class="form-label"> </label>
            <div class="graphic-pictures" id="galleryPicturesContainer"></div>
            @Html.TextBoxFor(m => m.Pictures, new { type = "file", name = "Pictures", id="galleryPictures", multiple = "multiple", @class="form-label"})
            <span asp-validation-for="Pictures"></span>
        </div>
            
        <div style="width: 100%; text-align: center;">
            <input type="submit" value="DODAJ" class="register-button"/>
        </div>
    </form>
</div>

<script>

    let dataTransferTemp = new DataTransfer();
    let dataTransfer = new DataTransfer();
    let galleryPictures = document.querySelector('#galleryPictures');
    let galleryPicturesContainer = document.querySelector('#galleryPicturesContainer');
    galleryPictures.addEventListener('change', showPictures);

    function showPictures() 
    {
        let picturesFiles = galleryPictures.files;
        for (let file of picturesFiles) 
        {
            dataTransferTemp.items.add(new File([], file.name));
            let div = document.createElement('div');
            div.className = "item";
            let i = document.createElement('i');
            i.className = "fa-solid fa-square-minus fa-3x";
            let image = document.createElement('img');
            image.src = URL.createObjectURL(file);
            div.id = image.src;
            i.onclick = function () 
            {
                div.parentNode.removeChild(div);
                dataTransfer = new DataTransfer();
                for (let data of galleryPictures.files)
                {
                    if (data !== file) 
                    {
                        dataTransfer.items.add(data)
                        if(dataTransfer.files.length != 0)
                        {
                            galleryPictures.files = dataTransfer.files;
                        }
                    }
                }
            };
            div.appendChild(image);
            div.appendChild(i);
            galleryPicturesContainer.appendChild(div);
        }
    }

    let mainGraphicPicture = document.querySelector('#mainGraphicPicture');
    let mainGraphicPictureContainer = document.querySelector('#mainGraphicPictureContainer');
    mainGraphicPicture.addEventListener('change', showPicture);

    function showPicture(){
        while(mainGraphicPictureContainer.firstChild) {
            mainGraphicPictureContainer.removeChild(mainGraphicPictureContainer.firstChild);
        }
            
        let picturesFiles = mainGraphicPicture.files;
        for (let file of picturesFiles) {
            let image = document.createElement('img');
            image.src = URL.createObjectURL(file);
            mainGraphicPictureContainer.appendChild(image);
        }
    }

</script>
